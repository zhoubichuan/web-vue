(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{750:function(s,a,t){"use strict";t.r(a);var e=t(3),n=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"一-构建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一-构建"}},[s._v("#")]),s._v(" 一.构建")]),s._v(" "),a("h2",{attrs:{id:"_1-本地预览"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-本地预览"}},[s._v("#")]),s._v(" 1.本地预览")]),s._v(" "),a("p",[s._v("dist 目录需要启动一个 HTTP 服务器来访问 (除非你已经将 publicPath 配置为了一个相对的值)，所以以 file:// 协议直接打开 dist/index.html 是不会工作的。在本地预览生产环境构建最简单的方式就是使用一个 Node.js 静态文件服务器，例如 serve：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-g")]),s._v(" serve\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -s 参数的意思是将其架设在 Single-Page Application 模式下")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 这个模式会处理即将提到的路由问题")]),s._v("\nserve "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-s")]),s._v(" dist\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h2",{attrs:{id:"_2-sh-文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-sh-文件"}},[s._v("#")]),s._v(" 2.sh 文件")])])}),[],!1,null,null,null);a.default=n.exports}}]);